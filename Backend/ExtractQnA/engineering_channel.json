{

   "channelName": "Engineering Channel",
   "channelContext": "This channel is used for engineering general questions",
   "channelWikiTopics": ["General", "Python", "Java", "Node.js", "Visual Studio", "Android"],
   "channelThreads": [
       {
        "threadMessage":"I use the Postman desktop app for web API testing. I have a lot of controllers and for each need a token. First I get Bearer token and then copy it to other requests. This token have limit time. Can I get token automatically and then automatically set it to all others requests?",
        "threadReplies": [
            "Write below code in tests tab in postman for your login request. Then edit your collection and set your env authToken inside.",
            "You can save and re-use the token's using the Token Name from Postman. You can select it from the available token list. One of the many cases are. Request for a refresh token using the credentials. Use the refresh token to get an access token. Use the access token to authenticate the API. The step 1 sometimes requires us to login to an interface of the API provider and get an authentication code to our callback url. Some API provider's allow us to override this by providing the client_secret key and the client_id as an authorization header and the refresh token as the request parameters and by setting prompt as none. From the documentation. prompt (optional) none no UI will be shown during the request. If this is not possible (e.g. because the user has to sign in or consent) an error is returned. ttps://identityserver.github.io/Documentation/docsv2/endpoints/authorization.html All you need to know about the identity servers are here.  https://identityserver.github.io/Documentation"
          ]
        },
        {
        "threadMessage":"I have a web server written in Node.js and I would like to launch with a specific folder. I'm not sure how to access arguments in JavaScript. I'm running node like this: $ node server.js folder  here server.js is my server code. Node.js help says this is possible:         $ node -h  Usage: node [options] script.js [arguments] How would I access those arguments in JavaScript? Somehow I was not able to find this information on the web.",
        "threadReplies": [
            "It's probably a good idea to manage your configuration in a centralized manner using something like nconf github.com/flatiron/nconf It helps you work with configuration files, environment variables, command-line arguments",
            "And here's configvention, my own, minimal, readonly interface for nconf"
          ]
        }
   ]
}
